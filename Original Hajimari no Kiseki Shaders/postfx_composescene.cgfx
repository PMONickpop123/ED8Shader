#ifdef main_ComposeSceneFP_S_____
#define cs_G  0
#define cs_Cd 0
#define cs_z  0
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_____
#endif

#ifdef main_ComposeSceneFP_S__z__
#define cs_G  0
#define cs_Cd 0
#define cs_z  1
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S__z__
#endif

#ifdef main_ComposeSceneFP_SG____
#define cs_G  1
#define cs_Cd 0
#define cs_z  0
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SG____
#endif

#ifdef main_ComposeSceneFP_SG_z__
#define cs_G  1
#define cs_Cd 0
#define cs_z  1
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SG_z__
#endif

#ifdef main_ComposeSceneFP_S_C___
#define cs_G  0
#define cs_Cd 1
#define cs_z  0
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_C___
#endif

#ifdef main_ComposeSceneFP_S_Cz__
#define cs_G  0
#define cs_Cd 1
#define cs_z  1
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_Cz__
#endif

#ifdef main_ComposeSceneFP_SGC___
#define cs_G  1
#define cs_Cd 1
#define cs_z  0
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGC___
#endif

#ifdef main_ComposeSceneFP_SGCz__
#define cs_G  1
#define cs_Cd 1
#define cs_z  1
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGCz__
#endif

#ifdef main_ComposeSceneFP_S_d___
#define cs_G  0
#define cs_Cd 2
#define cs_z  0
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_d___
#endif

#ifdef main_ComposeSceneFP_S_dz__
#define cs_G  0
#define cs_Cd 2
#define cs_z  1
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_dz__
#endif

#ifdef main_ComposeSceneFP_SGd___
#define cs_G  1
#define cs_Cd 2
#define cs_z  0
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGd___
#endif

#ifdef main_ComposeSceneFP_SGdz__
#define cs_G  1
#define cs_Cd 2
#define cs_z  1
#define cs_M  0
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGdz__
#endif

#ifdef main_ComposeSceneFP_S___M_
#define cs_G  0
#define cs_Cd 0
#define cs_z  0
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S___M_
#endif

#ifdef main_ComposeSceneFP_S__zM_
#define cs_G  0
#define cs_Cd 0
#define cs_z  1
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S__zM_
#endif

#ifdef main_ComposeSceneFP_SG__M_
#define cs_G  1
#define cs_Cd 0
#define cs_z  0
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SG__M_
#endif

#ifdef main_ComposeSceneFP_SG_zM_
#define cs_G  1
#define cs_Cd 0
#define cs_z  1
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SG_zM_
#endif

#ifdef main_ComposeSceneFP_S_C_M_
#define cs_G  0
#define cs_Cd 1
#define cs_z  0
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_C_M_
#endif

#ifdef main_ComposeSceneFP_S_CzM_
#define cs_G  0
#define cs_Cd 1
#define cs_z  1
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_CzM_
#endif

#ifdef main_ComposeSceneFP_SGC_M_
#define cs_G  1
#define cs_Cd 1
#define cs_z  0
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGC_M_
#endif

#ifdef main_ComposeSceneFP_SGCzM_
#define cs_G  1
#define cs_Cd 1
#define cs_z  1
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGCzM_
#endif

#ifdef main_ComposeSceneFP_S_d_M_
#define cs_G  0
#define cs_Cd 2
#define cs_z  0
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_d_M_
#endif

#ifdef main_ComposeSceneFP_S_dzM_
#define cs_G  0
#define cs_Cd 2
#define cs_z  1
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_S_dzM_
#endif

#ifdef main_ComposeSceneFP_SGd_M_
#define cs_G  1
#define cs_Cd 2
#define cs_z  0
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGd_M_
#endif

#ifdef main_ComposeSceneFP_SGdzM_
#define cs_G  1
#define cs_Cd 2
#define cs_z  1
#define cs_M  1
#define cs_ci 0
#define cs_NAME_ ComposeSceneFP_SGdzM_
#endif

#ifdef main_ComposeSceneFP_S____i
#define cs_G  0
#define cs_Cd 0
#define cs_z  0
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S____i
#endif

#ifdef main_ComposeSceneFP_S__z_i
#define cs_G  0
#define cs_Cd 0
#define cs_z  1
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S__z_i
#endif

#ifdef main_ComposeSceneFP_SG___i
#define cs_G  1
#define cs_Cd 0
#define cs_z  0
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SG___i
#endif

#ifdef main_ComposeSceneFP_SG_z_i
#define cs_G  1
#define cs_Cd 0
#define cs_z  1
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SG_z_i
#endif

#ifdef main_ComposeSceneFP_S_C__i
#define cs_G  0
#define cs_Cd 1
#define cs_z  0
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_C__i
#endif

#ifdef main_ComposeSceneFP_S_Cz_i
#define cs_G  0
#define cs_Cd 1
#define cs_z  1
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_Cz_i
#endif

#ifdef main_ComposeSceneFP_SGC__i
#define cs_G  1
#define cs_Cd 1
#define cs_z  0
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGC__i
#endif

#ifdef main_ComposeSceneFP_SGCz_i
#define cs_G  1
#define cs_Cd 1
#define cs_z  1
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGCz_i
#endif

#ifdef main_ComposeSceneFP_S_d__i
#define cs_G  0
#define cs_Cd 2
#define cs_z  0
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_d__i
#endif

#ifdef main_ComposeSceneFP_S_dz_i
#define cs_G  0
#define cs_Cd 2
#define cs_z  1
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_dz_i
#endif

#ifdef main_ComposeSceneFP_SGd__i
#define cs_G  1
#define cs_Cd 2
#define cs_z  0
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGd__i
#endif

#ifdef main_ComposeSceneFP_SGdz_i
#define cs_G  1
#define cs_Cd 2
#define cs_z  1
#define cs_M  0
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGdz_i
#endif

#ifdef main_ComposeSceneFP_S___Mi
#define cs_G  0
#define cs_Cd 0
#define cs_z  0
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S___Mi
#endif

#ifdef main_ComposeSceneFP_S__zMi
#define cs_G  0
#define cs_Cd 0
#define cs_z  1
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S__zMi
#endif

#ifdef main_ComposeSceneFP_SG__Mi
#define cs_G  1
#define cs_Cd 0
#define cs_z  0
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SG__Mi
#endif

#ifdef main_ComposeSceneFP_SG_zMi
#define cs_G  1
#define cs_Cd 0
#define cs_z  1
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SG_zMi
#endif

#ifdef main_ComposeSceneFP_S_C_Mi
#define cs_G  0
#define cs_Cd 1
#define cs_z  0
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_C_Mi
#endif

#ifdef main_ComposeSceneFP_S_CzMi
#define cs_G  0
#define cs_Cd 1
#define cs_z  1
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_CzMi
#endif

#ifdef main_ComposeSceneFP_SGC_Mi
#define cs_G  1
#define cs_Cd 1
#define cs_z  0
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGC_Mi
#endif

#ifdef main_ComposeSceneFP_SGCzMi
#define cs_G  1
#define cs_Cd 1
#define cs_z  1
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGCzMi
#endif

#ifdef main_ComposeSceneFP_S_d_Mi
#define cs_G  0
#define cs_Cd 2
#define cs_z  0
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_d_Mi
#endif

#ifdef main_ComposeSceneFP_S_dzMi
#define cs_G  0
#define cs_Cd 2
#define cs_z  1
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_S_dzMi
#endif

#ifdef main_ComposeSceneFP_SGd_Mi
#define cs_G  1
#define cs_Cd 2
#define cs_z  0
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGd_Mi
#endif

#ifdef main_ComposeSceneFP_SGdzMi
#define cs_G  1
#define cs_Cd 2
#define cs_z  1
#define cs_M  1
#define cs_ci 1
#define cs_NAME_ ComposeSceneFP_SGdzMi
#endif

#ifdef main_ComposeSceneFP_S____c
#define cs_G  0
#define cs_Cd 0
#define cs_z  0
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S____c
#endif

#ifdef main_ComposeSceneFP_S__z_c
#define cs_G  0
#define cs_Cd 0
#define cs_z  1
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S__z_c
#endif

#ifdef main_ComposeSceneFP_SG___c
#define cs_G  1
#define cs_Cd 0
#define cs_z  0
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SG___c
#endif

#ifdef main_ComposeSceneFP_SG_z_c
#define cs_G  1
#define cs_Cd 0
#define cs_z  1
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SG_z_c
#endif

#ifdef main_ComposeSceneFP_S_C__c
#define cs_G  0
#define cs_Cd 1
#define cs_z  0
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_C__c
#endif

#ifdef main_ComposeSceneFP_S_Cz_c
#define cs_G  0
#define cs_Cd 1
#define cs_z  1
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_Cz_c
#endif

#ifdef main_ComposeSceneFP_SGC__c
#define cs_G  1
#define cs_Cd 1
#define cs_z  0
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGC__c
#endif

#ifdef main_ComposeSceneFP_SGCz_c
#define cs_G  1
#define cs_Cd 1
#define cs_z  1
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGCz_c
#endif

#ifdef main_ComposeSceneFP_S_d__c
#define cs_G  0
#define cs_Cd 2
#define cs_z  0
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_d__c
#endif

#ifdef main_ComposeSceneFP_S_dz_c
#define cs_G  0
#define cs_Cd 2
#define cs_z  1
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_dz_c
#endif

#ifdef main_ComposeSceneFP_SGd__c
#define cs_G  1
#define cs_Cd 2
#define cs_z  0
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGd__c
#endif

#ifdef main_ComposeSceneFP_SGdz_c
#define cs_G  1
#define cs_Cd 2
#define cs_z  1
#define cs_M  0
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGdz_c
#endif

#ifdef main_ComposeSceneFP_S___Mc
#define cs_G  0
#define cs_Cd 0
#define cs_z  0
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S___Mc
#endif

#ifdef main_ComposeSceneFP_S__zMc
#define cs_G  0
#define cs_Cd 0
#define cs_z  1
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S__zMc
#endif

#ifdef main_ComposeSceneFP_SG__Mc
#define cs_G  1
#define cs_Cd 0
#define cs_z  0
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SG__Mc
#endif

#ifdef main_ComposeSceneFP_SG_zMc
#define cs_G  1
#define cs_Cd 0
#define cs_z  1
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SG_zMc
#endif

#ifdef main_ComposeSceneFP_S_C_Mc
#define cs_G  0
#define cs_Cd 1
#define cs_z  0
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_C_Mc
#endif

#ifdef main_ComposeSceneFP_S_CzMc
#define cs_G  0
#define cs_Cd 1
#define cs_z  1
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_CzMc
#endif

#ifdef main_ComposeSceneFP_SGC_Mc
#define cs_G  1
#define cs_Cd 1
#define cs_z  0
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGC_Mc
#endif

#ifdef main_ComposeSceneFP_SGCzMc
#define cs_G  1
#define cs_Cd 1
#define cs_z  1
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGCzMc
#endif

#ifdef main_ComposeSceneFP_S_d_Mc
#define cs_G  0
#define cs_Cd 2
#define cs_z  0
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_d_Mc
#endif

#ifdef main_ComposeSceneFP_S_dzMc
#define cs_G  0
#define cs_Cd 2
#define cs_z  1
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_S_dzMc
#endif

#ifdef main_ComposeSceneFP_SGd_Mc
#define cs_G  1
#define cs_Cd 2
#define cs_z  0
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGd_Mc
#endif

#ifdef main_ComposeSceneFP_SGdzMc
#define cs_G  1
#define cs_Cd 2
#define cs_z  1
#define cs_M  1
#define cs_ci 2
#define cs_NAME_ ComposeSceneFP_SGdzMc
#endif

uniform sampler2D ColorBuffer;
uniform sampler2D GlareBuffer;;
uniform sampler2D DepthBuffer;
uniform sampler2D FilterTexture;
uniform sampler2D FocusBuffer;
uniform sampler2D FadingTexture;

layout(std140) uniform Param
{
uniform SceneWideParameters scene;

uniform float MaskEps;

uniform float4 CommonParams;	// XY:1/ソース画像サイズ Z:ソース画像アスペクト比 W:未使用
uniform float4 FilterColor;	// 加算フィルタ RGB:色 A:強さ
uniform float4 FadingColor;	// フェードフィルタ RGB:色 A:補間
uniform float4 _MonotoneMul;	// モノトーンフィルタ RGB:色 A:補間		※PhyreSceneWideParameters.h側の同名変数とかち合うようなので改名
uniform float4 _MonotoneAdd;	// モノトーンフィルタ RGB:色 A:-		※PhyreSceneWideParameters.h側の同名変数とかち合うようなので改名
uniform float4 GlowIntensity;
uniform float4 GodrayParams;	// XY:光源のUV座標 Z:遮蔽判定用Ｚ値 W:アスペクト比
uniform float4 GodrayParams2;	// XY:１ピクセル分のUV移動量 Z:ズームブラーの伸び具合 W:マスク画像のスケールの逆数
uniform float4 GodrayColor ;	// RGB:色、A:強度
uniform float4 SSAOParams;	// X:検索半径 Y:(1-強度) Z:(1/強度) W:減衰距離
uniform float4 SSRParams;	// X:レイの長さ Y:レイのステップ率 Z:奥行きフェード（最奥） W:レンダーターゲットの横幅
uniform float4 ToneFactor;
uniform float4 UvScaleBias;	// XY:uvのスケール値、ZW:uvのバイアス値
uniform float4 GaussianBlurParams;		// XY:ソース画像のサイズ Z:カラー出力係数（輝度圧縮時の展開用） W:グロー鮮鋭部の合算率
uniform float4 DofParams;		// X:合焦深度 Y:1/合焦範囲 Z:被写界深度補正値（強さの調整） W:未使用
uniform float4 GammaParameters;	// DeGamma/Gamma, 画面のスケール(X), 画面のスケール(Y), W:未使用
uniform float4 NoiseParams;	// X:時間 Y:歪み具合 Z:色収差の水平方向のズレ具合 W:合成率
uniform float4 WhirlPinchParams;
uniform float4 UVWarpParams ;
uniform float4 MotionBlurParams;	// X:ブラーサンプル数 Y:速度スケール Z:フェード係数 W:ブラー掛かり具合
uniform float GlobalTexcoordFactor;
};

struct ComposeSceneVPOutput
{
	float4 ScreenPosition;
	float2 ScreenUv;
	float2 ScreenUvScaled;
};

half4 loadCoverTex(float2 screenUv)
{
	return _h4tex2Dlod(LinearClampSamplerState, FilterTexture, screenUv.xy, 0) * half4(FilterColor);
}

half4 loadGlowTex(float2 screenUv)
{
	return _h4tex2Dlod(LinearClampSamplerState, GlareBuffer, screenUv.xy, 0);
}

float calcDofValue(float linearDepth)
{
	// 合焦距離から一定範囲をボカす
	float value = saturate(abs(linearDepth - DofParams.x) * DofParams.y);
	value *= value;	// 遠景、近景にメリハリを付けるため
	value *= DofParams.z;	// 強さの調整
	return value;
}

half3 loadDofTex(float2 screenUv, float2 screenUvScaled, float linearDepth)
{
	half3 color = _h4tex2Dlod(LinearClampSamplerState, ColorBuffer, screenUvScaled.xy, 0).rgb;
	half3 focus = _h4tex2Dlod(LinearClampSamplerState, FocusBuffer, screenUv.xy, 0).rgb;
	return lerp(color, focus, half(calcDofValue(linearDepth)));
}

float calcCoverFilterDof(float linearDepth)
{
	return min(1.0, linearDepth + ToneFactor.y);
}

float getDepth(float2 screenUv)
{
	float depth = _tex2Dlod(PointClampSamplerState, DepthBuffer, screenUv.xy, 0).x;
	return depth;
}

float calcViewSpaceZ(float depth)
{
	return -(scene.cameraNearTimesFar / (depth * scene.cameraFarMinusNear - scene.cameraNearFar.y));
}

float calcLinearDepth(float depth)
{
	return calcViewSpaceZ(depth) / scene.cameraNearFar.y;
}

float getLinearDepth(float2 screenUv)
{
	return calcLinearDepth(getDepth(screenUv));
}

half4 cs_NAME_ (ComposeSceneVPOutput IN)
{
#if (cs_z != 0) || (cs_Cd != 0)
	float depth = getLinearDepth(IN.ScreenUvScaled);
#endif //!

#if (cs_z != 0)
	half3 color = loadDofTex(IN.ScreenUv, IN.ScreenUvScaled, depth) * ToneFactor.x;
#else //!
	half3 color = _h4tex2Dlod(LinearClampSamplerState, ColorBuffer, IN.ScreenUv * UvScaleBias.xy + UvScaleBias.zw, 0).rgb * ToneFactor.x;
#endif //!
#if ((cs_z != 0) || (cs_Cd != 0)) && 0
	color = half3(depth,depth,depth);	//デバッグ用
#endif
	half3 resultColor = color.rgb;

#if (cs_G != 0)
	half3 glow = loadGlowTex(IN.ScreenUv).rgb * half(GlowIntensity.w);
//	resultColor = resultColor + glow;	// 加算合成
	resultColor = glow * (1.0 - resultColor) + resultColor;	// スクリーン合成
#endif //!

#if (cs_Cd != 0)
	half4 cover = loadCoverTex(IN.ScreenUv);
	cover.rgb *= cover.a;
	#if (cs_Cd == 2)
	cover.rgb *= calcCoverFilterDof(depth);
	#endif //!
	half3 result_add = resultColor + cover.rgb;
	half3 result_scr = cover.rgb * (1.0 - resultColor) + resultColor;
	resultColor = lerp(result_add, result_scr, 0.5);	// 白飛び緩和のため、スクリーン合成の結果とブレンド
#endif //!

#if (cs_M != 0)
	half3 mono = dot(resultColor, half3(0.299, 0.587, 0.114)) * half3(_MonotoneMul.rgb) + half3(_MonotoneAdd.rgb);
	resultColor = lerp(resultColor, mono, half(_MonotoneMul.a));
#endif //!

#if (cs_ci != 0)
	#if (cs_ci == 1)
		#if defined(PHYRE_D3DFX)
	half4 fading = _h4tex2Dlod(LinearClampSamplerState, FadingTexture, half2(IN.ScreenUv.x, 1 - IN.ScreenUv.y), 0) * half4(FadingColor);
		#else
	half4 fading = _h4tex2Dlod(LinearClampSamplerState, FadingTexture, IN.ScreenUv, 0) * half4(FadingColor);
		#endif
	#else
	half4 fading = half4(FadingColor);
	#endif
	resultColor = lerp(resultColor.rgb, fading.rgb, fading.a);
#endif //!

	return half4(resultColor, 1);
}

in ComposeSceneVPOutput OUT;
out vec4 out_FragColor;

void main()
{
	out_FragColor = cs_NAME_(OUT);
}
